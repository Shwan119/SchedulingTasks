using System;
using System.Threading;
using System.Collections.Generic;

class Program
{
    static Random random = new Random();

    static void Main()
    {
        // Seed time
        DateTime now = DateTime.Now;
        int currentHour = now.Hour;
        int currentMinute = now.Minute;
        int currentSecond = now.Second;

        // running it for 1 hour and we pause 10 seconds between each run
        int ticks = 360;

        // making it more fun and visible
        var backgroundColors = new[]
        {
            ConsoleColor.DarkBlue,
            ConsoleColor.DarkGreen,
            ConsoleColor.DarkGray,
            ConsoleColor.DarkMagenta,
            ConsoleColor.DarkCyan
        };

        for (int i = 0; i < ticks; i++)
        {
            int rawSecond = currentSecond + 10;
            bool secondOverflow = rawSecond >= 60;
            int nextSecond = secondOverflow ? rawSecond - 60 : rawSecond;

            int rawMinute = currentMinute + (secondOverflow ? 1 : 0);
            bool minuteOverflow = rawMinute >= 60;
            int nextMinute = minuteOverflow ? rawMinute - 60 : rawMinute;

            int rawHour = currentHour + (minuteOverflow ? 1 : 0);
            int nextHour = rawHour >= 24 ? rawHour - 24 : rawHour;

            var hourExpr = GenerateExpression(nextHour);
            var minuteExpr = GenerateExpression(nextMinute);
            var secondExpr = GenerateExpression(nextSecond);

            // Apply different background color
            var bg = backgroundColors[i % backgroundColors.Length];
            Console.BackgroundColor = bg;
            Console.ForegroundColor = ConsoleColor.White;

            Console.WriteLine($" Hour:   {hourExpr.A}{hourExpr.Symbol}{hourExpr.B} = {nextHour}");
            Console.WriteLine($" Minute: {minuteExpr.A}{minuteExpr.Symbol}{minuteExpr.B} = {nextMinute}");
            Console.WriteLine($" Second: {secondExpr.A}{secondExpr.Symbol}{secondExpr.B} = {nextSecond}");
            Console.WriteLine();

            Console.ResetColor();

            // Pause 10 seconds between run
            if (i < ticks - 1)
            {
                Console.WriteLine("Pausing 10 seconds…\n");
                Thread.Sleep(10_000);
            }

            // Update for the next run
            currentHour = nextHour;
            currentMinute = nextMinute;
            currentSecond = nextSecond;
        }

        Console.WriteLine("Done!");
    }

    static (int A, int B, string Symbol) GenerateExpression(int value)
    {
        var candidates = new List<(int A, int B, string Symbol)>();

        // addition
        int a1 = random.Next(0, value + 1);
        candidates.Add((a1, value - a1, "+"));

        // subtraction
        int a2 = random.Next(value, value + 11);
        candidates.Add((a2, a2 - value, "-"));

        // multiplication
        for (int i = 1; i <= value; i++)
            if (value % i == 0)
                candidates.Add((i, value / i, "*"));

        // division
        for (int b = 2; b <= 10; b++)
            candidates.Add((value * b, b, "/"));

        return candidates[random.Next(candidates.Count)];
    }
}
