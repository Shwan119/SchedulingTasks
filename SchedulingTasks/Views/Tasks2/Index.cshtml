<!-- Views/ScheduledTasks/Index.cshtml -->
@model IEnumerable<SchedulingTasks.Dto.ScheduledTaskResponseDto>

<div class="min-h-screen bg-gray-50 py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Header -->
        <div class="flex justify-between items-center mb-8">
            <div>
                <h1 class="text-2xl font-bold text-gray-900">Scheduled Tasks</h1>
                <p class="mt-2 text-sm text-gray-700">Manage scheduled tasks and their schedules</p>
            </div>
            <button onclick="showAddModal()"
                    class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none">
                <i class="bi bi-plus-lg mr-2"></i>
                Add Task
            </button>
        </div>

        <!-- Main Table -->
        <div class="bg-white shadow-sm rounded-lg overflow-hidden">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Schedule</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Last Run</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Next Run</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Endpoint</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @foreach (var task in Model)
                    {
                        <tr class="@(!task.IsEnabled ? "opacity-60" : "")">
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center">
                                    <i class="bi bi-calendar mr-2 text-gray-400"></i>
                                    <span class="text-sm font-medium text-gray-900">@task.Name</span>
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="flex items-center">
                                    <i class="bi bi-clock mr-2 text-gray-400"></i>
                                    <span class="text-sm text-gray-500">@task.CronExpression</span>
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                @task.LastRun?.ToString("yyyy-MM-dd HH:mm:ss")
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                @task.NextRun?.ToString("yyyy-MM-dd HH:mm:ss")
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full @(task.Status switch {
                                    "Completed" => "bg-green-100 text-green-800",
                                    "Running" => "bg-blue-100 text-blue-800",
                                    "Failed" => "bg-red-100 text-red-800",
                                    _ => "bg-yellow-100 text-yellow-800"
                                })">
                                    @task.Status
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2">
                                <button onclick="toggleTask(@task.Id)"
                                        class="@(task.IsEnabled ? "text-green-600 hover:text-green-900" : "text-gray-400 hover:text-gray-600")"
                                        title="@(task.IsEnabled ? "Disable" : "Enable")">
                                    <i data-lucide="power" class="w-5 h-5"></i>
                                </button>
                                <button onclick="editTask(@task.Id)"
                                        class="text-indigo-600 hover:text-indigo-900"
                                        title="Edit">
                                    <i data-lucide="edit" class="w-5 h-5"></i>
                                </button>
                                <button onclick="deleteTask(@task.Id)"
                                        class="text-red-600 hover:text-red-900"
                                        title="Delete">
                                    <i data-lucide="trash" class="w-5 h-5"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Add/Edit Modal -->
        <div id="taskModal" class="hidden fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center">
            <div class="bg-white rounded-lg p-6 max-w-md w-full">
                <form id="taskForm" action="@Url.Action("Create")" method="post" class="space-y-4">
                    <input type="hidden" id="taskId" name="Id" />

                    <div>
                        <label class="block text-sm font-medium text-gray-700">Task Name</label>
                        <input type="text" name="Name" required
                               class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" />
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700">Cron Expression</label>
                        <input type="text" name="CronExpression" required placeholder="0 * * * *"
                               class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" />
                        <p class="mt-1 text-xs text-gray-500">Example: 0 * * * * (Every hour)</p>
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700">Endpoint</label>
                        <select name="EndpointId" required
                                class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500">
                            @foreach (var endpoint in ViewBag.Endpoints)
                            {
                                <option value="@endpoint.Id">@endpoint.Name</option>
                            }
                        </select>
                    </div>

                    <div class="flex justify-end space-x-3 pt-4">
                        <button type="button" onclick="hideModal()"
                                class="px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50">
                            Cancel
                        </button>
                        <button type="submit"
                                class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700">
                            Save
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showAddModal() {
            document.getElementById('taskModal').classList.remove('hidden');
            document.getElementById('taskForm').reset();
            document.getElementById('taskId').value = '';
        }

        function hideModal() {
            document.getElementById('taskModal').classList.add('hidden');
        }

        function toggleTask(id) {
            $.post('@Url.Action("Toggle")', { id: id })
                .done(function (result) {
                    if (result.success) {
                        location.reload();
                    }
                });
        }

        function editTask(id) {
            $.get('@Url.Action("GetTask")', { id: id })
                .done(function (task) {
                    document.getElementById('taskId').value = task.id;
                    document.getElementById('taskForm').elements['Name'].value = task.name;
                    document.getElementById('taskForm').elements['CronExpression'].value = task.cronExpression;
                    document.getElementById('taskForm').elements['EndpointId'].value = task.endpointId;
                    document.getElementById('taskForm').action = '@Url.Action("Edit")';
                    document.getElementById('taskModal').classList.remove('hidden');
                });
        }

        function deleteTask(id) {
            if (confirm('Are you sure you want to delete this task?')) {
                $.post('@Url.Action("Delete")', { id: id })
                    .done(function () {
                        location.reload();
                    });
            }
        }

        lucide.createIcons();
    </script>
}